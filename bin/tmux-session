#!/usr/bin/env bash
#
### Stolen from https://github.com/mislav/dotfiles/blob/master/bin/tmux-session ###
### with minor hacks

set -e

sessionfile="${0}-" # ~/.tmux-session

dump() {
  local d=$'\t'
  tmux list-windows -a -F "#S${d}#{session_path}${d}#W${d}#{pane_current_path}"
}

save() {
  dump | tee "$sessionfile"
}

terminal_size() {
  stty size 2>/dev/null | awk '{ printf "-x%d -y%d", $2, $1 }'
}

session_exists() {
  tmux has-session -t "$1" 2>/dev/null
}

add_window() {
  tmux new-window -d -t "$1:" -n "$2" -c "$3"
}

new_session() {
  tmux new-session -d -s "$1" -n '__' -c "$3" $5 sleep 1 # creating interim window to force session working directory (hakish)
  tmux new-window -d -t "$1:" -n "$2" -c "$4"
}

restore() {
  tmux start-server
  local count=0
  local dimensions="$(terminal_size)"

  while IFS=$'\t' read session_name sdir window_name dir; do
    if [[ -d "$dir" && $window_name != "log" && $window_name != "man" ]]; then
      if session_exists "$session_name"; then
        add_window "$session_name" "$window_name" "$dir"
      else
        new_session "$session_name" "$window_name" "$sdir" "$dir" "$dimensions"
        count=$(( count + 1 ))
      fi
    fi
  done < "$sessionfile"

  echo "restored $count sessions"
}

case "$1" in
save | restore )
  $1
  ;;
* )
  echo "valid commands: save, restore" >&2
  exit 1
esac

# vi:set sts=2 sw=2 ts=2 et:
